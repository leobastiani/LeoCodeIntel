{
	"scope": "source.js",

	"completions":
	[
		{ "trigger": "charAt\tString", "contents": "charAt(${1:index})" },
		{ "trigger": "charCodeAt\tString", "contents": "charCodeAt(${1:index})" },
		{ "trigger": "concat\tString", "contents": "concat(${1:string1}, ${2:string2})" },
		{ "trigger": "fromCharCode\tString", "contents": "fromCharCode(${1:n1}, ${2:n2})" },
		{ "trigger": "indexOf\tString", "contents": "indexOf(${1:searchvalue}, ${2:start})" },
		{ "trigger": "lastIndexOf\tString", "contents": "lastIndexOf(${1:searchvalue}, ${2:start})" },
		{ "trigger": "localeCompare\tString", "contents": "localeCompare(${1:compareString})" },
		{ "trigger": "match\tString", "contents": "match(${1:regexp})" },
		{ "trigger": "replace\tString", "contents": "replace(${1:searchvalue}, ${2:newvalue})" },
		{ "trigger": "search\tString", "contents": "search(${1:searchvalue})" },
		{ "trigger": "slice\tString", "contents": "slice(${1:start}, ${2:end})" },
		{ "trigger": "split\tString", "contents": "split(${1:separator}, ${2:limit})" },
		{ "trigger": "substr\tString", "contents": "substr(${1:start}, ${2:length})" },
		{ "trigger": "substring\tString", "contents": "substring(${1:start}, ${2:end})" },
		{ "trigger": "toLocaleLowerCase\tString", "contents": "toLocaleLowerCase()" },
		{ "trigger": "toLocaleUpperCase\tString", "contents": "toLocaleUpperCase()" },
		{ "trigger": "toLowerCase\tString", "contents": "toLowerCase()" },
		{ "trigger": "toUpperCase\tString", "contents": "toUpperCase()" },
		{ "trigger": "trim\tString", "contents": "trim()" },
		{ "trigger": "toFixed\tNumber", "contents": "toFixed(${1:x})" },
		{ "trigger": "toExponential\tNumber", "contents": "toExponential(${1:x})" },
		{ "trigger": "toPrecision\tNumber", "contents": "toPrecision(${1:x})" },
		{ "trigger": "abs\tMath", "contents": "abs(${1:x})" },
		{ "trigger": "asin\tMath", "contents": "asin(${1:x})" },
		{ "trigger": "acos\tMath", "contents": "acos(${1:x})" },
		{ "trigger": "ceil\tMath", "contents": "ceil(${1:x})" },
		{ "trigger": "cos\tMath", "contents": "cos(${1:x})" },
		{ "trigger": "atan\tMath", "contents": "atan(${1:x})" },
		{ "trigger": "floor\tMath", "contents": "floor(${1:x})" },
		{ "trigger": "log\tMath", "contents": "log(${1:x})" },
		{ "trigger": "exp\tMath", "contents": "exp(${1:x})" },
		{ "trigger": "atan2\tMath", "contents": "atan2(${1:y}, ${2:x})" },
		{ "trigger": "min\tMath", "contents": "min(${1:n1}, ${2:n2})" },
		{ "trigger": "pow\tMath", "contents": "pow(${1:x}, ${2:y})" },
		{ "trigger": "random\tMath", "contents": "random()" },
		{ "trigger": "round\tMath", "contents": "round(${1:x})" },
		{ "trigger": "max\tMath", "contents": "max(${1:n1}, ${2:n2})" },
		{ "trigger": "sqrt\tMath", "contents": "sqrt(${1:x})" },
		{ "trigger": "sin\tMath", "contents": "sin(${1:x})" },
		{ "trigger": "tan\tMath", "contents": "tan(${1:x})" },
		{ "trigger": "getDate\tDate", "contents": "getDate()" },
		{ "trigger": "getFullYear\tDate", "contents": "getFullYear()" },
		{ "trigger": "getMilliseconds\tDate", "contents": "getMilliseconds()" },
		{ "trigger": "getHours\tDate", "contents": "getHours()" },
		{ "trigger": "getDay\tDate", "contents": "getDay()" },
		{ "trigger": "getMinutes\tDate", "contents": "getMinutes()" },
		{ "trigger": "getMonth\tDate", "contents": "getMonth()" },
		{ "trigger": "getSeconds\tDate", "contents": "getSeconds()" },
		{ "trigger": "getUTCDate\tDate", "contents": "getUTCDate()" },
		{ "trigger": "getTimezoneOffset\tDate", "contents": "getTimezoneOffset()" },
		{ "trigger": "getUTCDay\tDate", "contents": "getUTCDay()" },
		{ "trigger": "getTime\tDate", "contents": "getTime()" },
		{ "trigger": "getUTCFullYear\tDate", "contents": "getUTCFullYear()" },
		{ "trigger": "getUTCHours\tDate", "contents": "getUTCHours()" },
		{ "trigger": "getUTCSeconds\tDate", "contents": "getUTCSeconds()" },
		{ "trigger": "getUTCMonth\tDate", "contents": "getUTCMonth()" },
		{ "trigger": "getUTCMinutes\tDate", "contents": "getUTCMinutes()" },
		{ "trigger": "parse\tDate", "contents": "parse(${1:datestring})" },
		{ "trigger": "setDate\tDate", "contents": "setDate(${1:day})" },
		{ "trigger": "getUTCMilliseconds\tDate", "contents": "getUTCMilliseconds()" },
		{ "trigger": "setHours\tDate", "contents": "setHours(${1:hour}, ${2:min}, ${3:sec}, ${4:millisec})" },
		{ "trigger": "setMinutes\tDate", "contents": "setMinutes(${1:min}, ${2:sec}, ${3:millisec})" },
		{ "trigger": "setSeconds\tDate", "contents": "setSeconds(${1:sec}, ${2:millisec})" },
		{ "trigger": "setUTCDate\tDate", "contents": "setUTCDate(${1:day})" },
		{ "trigger": "setTime\tDate", "contents": "setTime(${1:millisec})" },
		{ "trigger": "setFullYear\tDate", "contents": "setFullYear(${1:year}, ${2:month}, ${3:day})" },
		{ "trigger": "setMonth\tDate", "contents": "setMonth(${1:month}, ${2:day})" },
		{ "trigger": "setMilliseconds\tDate", "contents": "setMilliseconds(${1:millisec})" },
		{ "trigger": "setUTCHours\tDate", "contents": "setUTCHours(${1:hour}, ${2:min}, ${3:sec}, ${4:millisec})" },
		{ "trigger": "setUTCMilliseconds\tDate", "contents": "setUTCMilliseconds(${1:millisec})" },
		{ "trigger": "setUTCMinutes\tDate", "contents": "setUTCMinutes(${1:min}, ${2:sec}, ${3:millisec})" },
		{ "trigger": "setUTCFullYear\tDate", "contents": "setUTCFullYear(${1:year}, ${2:month}, ${3:day})" },
		{ "trigger": "setUTCMonth\tDate", "contents": "setUTCMonth(${1:month}, ${2:day})" },
		{ "trigger": "setUTCSeconds\tDate", "contents": "setUTCSeconds(${1:sec}, ${2:millisec})" },
		{ "trigger": "toDateString\tDate", "contents": "toDateString()" },
		{ "trigger": "toUTCString\tDate", "contents": "toUTCString()" },
		{ "trigger": "toJSON\tDate", "contents": "toJSON()" },
		{ "trigger": "toISOString\tDate", "contents": "toISOString()" },
		{ "trigger": "toLocaleDateString\tDate", "contents": "toLocaleDateString()" },
		{ "trigger": "toLocaleTimeString\tDate", "contents": "toLocaleTimeString()" },
		{ "trigger": "toLocaleString\tDate", "contents": "toLocaleString()" },
		{ "trigger": "UTC\tDate", "contents": "UTC(${1:year}, ${2:month}, ${3:day}, ${4:hours}, ${5:minutes}, ${6:seconds}, ${7:millisec})" },
		{ "trigger": "toTimeString\tDate", "contents": "toTimeString()" },
		{ "trigger": "concat\tArray", "contents": "concat(${1:array2}, ${2:array3})" },
		{ "trigger": "indexOf\tArray", "contents": "indexOf(${1:item}, ${2:start})" },
		{ "trigger": "join\tArray", "contents": "join(${1:separator})" },
		{ "trigger": "pop\tArray", "contents": "pop()" },
		{ "trigger": "reverse\tArray", "contents": "reverse()" },
		{ "trigger": "push\tArray", "contents": "push(${1:item1}, ${2:item2})" },
		{ "trigger": "slice\tArray", "contents": "slice(${1:start}, ${2:end})" },
		{ "trigger": "splice\tArray", "contents": "splice(${1:index}, ${2:howmany}, ${3:item})" },
		{ "trigger": "sort\tArray", "contents": "sort(${1:compareFunction})" },
		{ "trigger": "shift\tArray", "contents": "shift()" },
		{ "trigger": "lastIndexOf\tArray", "contents": "lastIndexOf(${1:item}, ${2:start})" },
		{ "trigger": "unshift\tArray", "contents": "unshift(${1:item1}, ${2:item2})" },
		{ "trigger": "decodeURI\tGlobal", "contents": "decodeURI(${1:uri})" },
		{ "trigger": "encodeURIComponent\tGlobal", "contents": "encodeURIComponent(${1:uri})" },
		{ "trigger": "eval\tGlobal", "contents": "eval(${1:string})" },
		{ "trigger": "escape\tGlobal", "contents": "escape(${1:string})" },
		{ "trigger": "decodeURIComponent\tGlobal", "contents": "decodeURIComponent(${1:uri})" },
		{ "trigger": "encodeURI\tGlobal", "contents": "encodeURI(${1:uri})" },
		{ "trigger": "isNaN\tGlobal", "contents": "isNaN(${1:value})" },
		{ "trigger": "Number\tGlobal", "contents": "Number(${1:object})" },
		{ "trigger": "parseInt\tGlobal", "contents": "parseInt(${1:string}, ${2:radix})" },
		{ "trigger": "parseFloat\tGlobal", "contents": "parseFloat(${1:string})" },
		{ "trigger": "String\tGlobal", "contents": "String(${1:object})" },
		{ "trigger": "isFinite\tGlobal", "contents": "isFinite(${1:value})" },
		{ "trigger": "unescape\tGlobal", "contents": "unescape(${1:string})" },
		{ "trigger": "addEventListener\tDocument", "contents": "addEventListener(${1:event}, ${2:function}, ${3:useCapture})" },
		{ "trigger": "createElement\tDocument", "contents": "createElement(${1:nodename})" },
		{ "trigger": "getElementById\tDocument", "contents": "getElementById(${1:elementID})" },
		{ "trigger": "getElementsByClassName\tDocument", "contents": "getElementsByClassName(${1:classname})" },
		{ "trigger": "getElementsByName\tDocument", "contents": "getElementsByName(${1:name})" },
		{ "trigger": "getElementsByTagName\tDocument", "contents": "getElementsByTagName(${1:tagname})" },
		{ "trigger": "hasFocus\tDocument", "contents": "hasFocus()" },
		{ "trigger": "importNode\tDocument", "contents": "importNode(${1:node}, ${2:deep})" },
		{ "trigger": "querySelector\tDocument", "contents": "querySelector(${1:CSS selectors})" },
		{ "trigger": "querySelectorAll\tDocument", "contents": "querySelectorAll(${1:CSS selectors})" },
		{ "trigger": "removeEventListener\tDocument", "contents": "removeEventListener(${1:event}, ${2:function}, ${3:useCapture})" },
		{ "trigger": "renameNode\tDocument", "contents": "renameNode(${1:node}, ${2:namespaceURI}, ${3:nodename})" },
		{ "trigger": "foreach\tforeach", "contents": "forEach(function (${1:elem}, ${2:index}) {\n	${0}\n});" },

	]
}