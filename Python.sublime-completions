{
	"scope": "source.python",

	"completions":
	[
		{ "trigger": "abs\tabs", "contents": "abs(${1:x})" },
		{ "trigger": "all\tall", "contents": "all(${1:iterable})" },
		{ "trigger": "any\tany", "contents": "any(${1:iterable})" },
		{ "trigger": "ascii\tascii", "contents": "ascii(${1:object})" },
		{ "trigger": "bin\tbin", "contents": "bin(${1:x})" },
		{ "trigger": "callable\tcallable", "contents": "callable(${1:object})" },
		{ "trigger": "chr\tchr", "contents": "chr(${1:i})" },
		{ "trigger": "compile\tflags=0, dont_inherit=False, optimize=-1", "contents": "compile(${1:source}, ${2:filename}, ${3:mode})" },
		{ "trigger": "delattr\tdelattr", "contents": "delattr(${1:object}, ${2:name})" },
		{ "trigger": "dir\tdir", "contents": "dir()" },
		{ "trigger": "divmod\tdivmod", "contents": "divmod(${1:a}, ${2:b})" },
		{ "trigger": "enumerate\tstart=0", "contents": "enumerate(${1:iterable})" },
		{ "trigger": "eval\tglobals=None, locals=None", "contents": "eval(${1:expression})" },
		{ "trigger": "exec\texec", "contents": "exec(${1:object})" },
		{ "trigger": "filter\tfilter", "contents": "filter(${1:function}, ${2:iterable})" },
		{ "trigger": "format\tformat", "contents": "format(${1:value})" },
		{ "trigger": "getattr\tgetattr", "contents": "getattr(${1:object}, ${2:name})" },
		{ "trigger": "globals\tglobals", "contents": "globals()" },
		{ "trigger": "hasattr\thasattr", "contents": "hasattr(${1:object}, ${2:name})" },
		{ "trigger": "hash\thash", "contents": "hash(${1:object})" },
		{ "trigger": "help\thelp", "contents": "help()" },
		{ "trigger": "hex\thex", "contents": "hex(${1:x})" },
		{ "trigger": "id\tid", "contents": "id(${1:object})" },
		{ "trigger": "input\tinput", "contents": "input()" },
		{ "trigger": "isinstance\tisinstance", "contents": "isinstance(${1:object}, ${2:classinfo})" },
		{ "trigger": "issubclass\tissubclass", "contents": "issubclass(${1:class}, ${2:classinfo})" },
		{ "trigger": "iter\titer", "contents": "iter(${1:object})" },
		{ "trigger": "len\tlen", "contents": "len(${1:s})" },
		{ "trigger": "locals\tlocals", "contents": "locals()" },
		{ "trigger": "map\tmap", "contents": "map(${1:function}, ${2:iterable}, ${3:...})" },
		{ "trigger": "max\tmax", "contents": "max(${1:iterable})" },
		{ "trigger": "max\tmax", "contents": "max(${1:arg1}, ${2:arg2}, ${3:*args})" },
		{ "trigger": "memoryview\tmemoryview", "contents": "memoryview(${1:obj})" },
		{ "trigger": "min\tmin", "contents": "min(${1:iterable})" },
		{ "trigger": "min\tmin", "contents": "min(${1:arg1}, ${2:arg2}, ${3:*args})" },
		{ "trigger": "next\tnext", "contents": "next(${1:iterator})" },
		{ "trigger": "oct\toct", "contents": "oct(${1:x})" },
		{ "trigger": "open\tmode='r', buffering=-1, encoding=None, errors=None, newline=None, closefd=True, opener=None", "contents": "open(${1:file})" },
		{ "trigger": "ord\tord", "contents": "ord(${1:c})" },
		{ "trigger": "pow\tpow", "contents": "pow(${1:x}, ${2:y})" },
		{ "trigger": "blabla\tsep=' ', end='\n', file=sys.stdout, flush=False", "contents": "blabla(${1:*objects})" },
		{ "trigger": "range\trange", "contents": "range(${1:stop})" },
		{ "trigger": "range\trange", "contents": "range(${1:start}, ${2:stop})" },
		{ "trigger": "repr\trepr", "contents": "repr(${1:object})" },
		{ "trigger": "reversed\treversed", "contents": "reversed(${1:seq})" },
		{ "trigger": "round\tround", "contents": "round(${1:number})" },
		{ "trigger": "setattr\tsetattr", "contents": "setattr(${1:object}, ${2:name}, ${3:value})" },
		{ "trigger": "sorted\tsorted", "contents": "sorted(${1:iterable})" },
		{ "trigger": "staticmethod\tstaticmethod", "contents": "staticmethod(${1:function})" },
		{ "trigger": "sum\tsum", "contents": "sum(${1:iterable})" },
		{ "trigger": "super\tsuper", "contents": "super()" },
		{ "trigger": "tuple\ttuple", "contents": "tuple()" },
		{ "trigger": "vars\tvars", "contents": "vars()" },
		{ "trigger": "zip\tzip", "contents": "zip(${1:*iterables})" },
		{ "trigger": "__import__\tglobals=None, locals=None, fromlist=(), level=0", "contents": "__import__()" },

	]
}